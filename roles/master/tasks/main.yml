---
- include: stable.yml
  when: kube_build == "stable"

- include: testing.yml
  when: kube_build == "testing"

- name: enable capability for kube-apiserver to bind to port below 1024
  sudo: yes
  capabilities:
    capability: cap_net_bind_service+ep
    path: /usr/bin/kube-apiserver
    state: present
  when: "{{ kube_master_port | int  }} < 1024"
  notify:
    - restart daemons
  tags:
    - master

- name: get the node token values from token files
  sudo: yes
  slurp:
    src: "{{ kube_token_dir }}/{{ item }}-{{ inventory_hostname }}.token"
  with_items:
    - "system:controller_manager"
    - "system:scheduler"
    - "system:kubectl"
    - "system:proxy"
  register: tokens
  delegate_to: "{{ groups[master_group_name][0] }}"
  tags:
    - master

- name: Set token facts
  set_fact:
    controller_manager_token: "{{ tokens.results[0].content|b64decode }}"
    scheduler_token: "{{ tokens.results[1].content|b64decode }}"
    kubectl_token: "{{ tokens.results[2].content|b64decode }}"
    proxy_token: "{{ tokens.results[3].content|b64decode }}"
  tags:
    - master

- name: write the config files for api server
  sudo: yes
  template: src=apiserver.j2 dest={{ kube_config_dir }}/apiserver
  notify:
    - restart daemons
  tags:
    - master

- name: write config file for controller-manager
  sudo: yes
  template: src=controller-manager.j2 dest={{ kube_config_dir }}/controller-manager
  notify:
    - restart controller-manager
  tags:
    - master

- name: write the kubecfg (auth) file for controller-manager
  sudo: yes
  template: src=controller-manager.kubeconfig.j2 dest={{ kube_config_dir }}/controller-manager.kubeconfig
  notify:
    - restart controller-manager
  tags:
    - master

- name: write the config file for scheduler
  sudo: yes
  template: src=scheduler.j2 dest={{ kube_config_dir }}/scheduler
  notify:
    - restart scheduler
  tags:
    - master

- name: write the kubecfg (auth) file for scheduler
  sudo: yes
  template: src=scheduler.kubeconfig.j2 dest={{ kube_config_dir }}/scheduler.kubeconfig
  notify:
    - restart scheduler
  tags:
    - master

- name: write the kubecfg (auth) file for kubectl
  sudo: yes
  template: src=kubectl.kubeconfig.j2 dest={{ kube_config_dir }}/kubectl.kubeconfig
  tags:
    - master

- name: write the config files for proxy
  sudo: yes
  template: src=proxy.j2 dest={{ kube_config_dir }}/proxy
  notify:
    - restart daemons
  tags:
    - master

- name: write the kubecfg (auth) file for proxy
  sudo: yes
  template: src=proxy.kubeconfig.j2 dest={{ kube_config_dir }}/proxy.kubeconfig
  tags:
    - master

- name: populate users for basic auth in API
  sudo: yes
  lineinfile:
    dest: "{{ kube_users_dir }}/known_users.csv"
    create: yes
    line: '{{ item.value.pass }},{{ item.key }},{{ item.value.role }}'
  with_dict: "{{ kube_users }}"
  notify:
    - restart apiserver
  tags:
    - master

- name: Enable apiserver
  sudo: yes
  service:
    name: kube-apiserver
    enabled: yes
    state: started
  tags:
    - master

- name: Enable controller-manager
  sudo: yes
  service:
    name: kube-controller-manager
    enabled: yes
    state: started
  tags:
    - master

- name: Enable scheduler
  sudo: yes
  service:
    name: kube-scheduler
    enabled: yes
    state: started
  tags:
    - master

- name: Enable kube-proxy
  sudo: yes
  service:
    name: kube-proxy
    enabled: yes
    state: started
  tags:
    - master