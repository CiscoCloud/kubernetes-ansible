---
- name: certs | create system kube-cert groups
  sudo: yes
  group: name={{ kube_cert_group }} state=present system=yes

- name: create system kube user
  sudo: yes
  user:
    name=kube
    comment="Kubernetes user"
    shell=/sbin/nologin
    state=present
    system=yes
    groups={{ kube_cert_group }}

- name: certs | make sure the certificate directory exits
  sudo: yes
  file:
    path={{ kube_cert_dir }}
    state=directory
    mode=o-rwx
    group={{ kube_cert_group }}

- name: tokens | make sure the tokens directory exits
  sudo: yes
  file:
    path={{ kube_token_dir }}
    state=directory
    mode=o-rwx
    group={{ kube_cert_group }}

- include: gen_certs.yml
  sudo: yes
  run_once: true
  when: inventory_hostname == groups[master_group_name][0]

- name: Read back the CA certificate
  sudo: yes
  slurp:
    src: "{{ kube_cert_dir }}/ca.crt"
  register: ca_cert
  run_once: true
  delegate_to: "{{ groups[master_group_name][0] }}"

- name: certs | register the CA certificate as a fact for later use
  set_fact:
    kube_ca_cert: "{{ ca_cert.content|b64decode }}"

- name: certs | write CA certificate everywhere
  sudo: yes
  copy: content="{{ kube_ca_cert }}" dest="{{ kube_cert_dir }}/ca.crt"
  notify:
    - restart daemons

- include: gen_tokens.yml
  sudo: yes
  run_once: true
  when: inventory_hostname == groups[master_group_name][0]
