---
- name: certs | create system kube-cert groups
  sudo: yes
  group: name={{ kube_cert_group }} state=present system=yes

- name: create system kube user
  sudo: yes
  user:
    name=kube
    comment="Kubernetes user"
    shell=/sbin/nologin
    state=present
    system=yes
    groups={{ kube_cert_group }}

- name: certs | make sure the certificate directory exits
  sudo: yes
  file:
    path={{ kube_cert_dir }}
    state=directory
    mode=o-rwx
    group={{ kube_cert_group }}

- name: tokens | make sure the tokens directory exits
  sudo: yes
  file:
    path={{ kube_token_dir }}
    state=directory
    mode=o-rwx
    group={{ kube_cert_group }}

- include: gen_certs.yml
  sudo: yes
  run_once: true

- name: certs | upload certificates to masters
  sudo: yes
  copy:
    src="{{ cert_syncdir.path }}/certs/{{ item }}"
    dest="{{ kube_cert_dir }}/{{ item }}"
    group="{{ kube_cert_group }}"
    owner=kube
    mode=0440
  with_items:
    - "ca.crt"
    - "server.crt"
    - "server.key"
    - "kubecfg.crt"
    - "kubecfg.key"
  when: inventory_hostname in groups[master_group_name]
  notify:
    - restart daemons

- name: certs | upload certificates to nodes
  sudo: yes
  copy:
    src="{{ cert_syncdir.path }}/certs/{{ item }}"
    dest="{{ kube_cert_dir }}/{{ item }}"
    group="{{ kube_cert_group }}"
    owner=kube
    mode=0440
  with_items:
    - "ca.crt"
    - "kubelet.crt"
    - "kubelet.key"
  when: inventory_hostname in groups[minion_group_name]
  notify:
    - restart daemons

- include: gen_tokens.yml
  sudo: yes
  run_once: true
