---
- name: certs | create temp directory for certs syncing
  local_action: file path=".syncdir" state=directory recurse=yes
  run_once: true
  register: cert_syncdir
  tags:
    - secrets

- name: certs | install cert generation script
  local_action: copy src=make-ca-cert.sh dest="{{ cert_syncdir.path }}/make-ca-cert.sh" mode=u+x
  run_once: true
  changed_when: false
  tags:
    - secrets

- name: certs | run cert generation script
  local_action: command
    "{{ playbook_dir }}/{{ cert_syncdir.path }}/make-ca-cert.sh"
  args:
    creates: "{{ cert_syncdir.path }}/certs/server.crt"
  environment:
    MASTERS: "{{ groups['master'] | join(' ') }}"
    DNS_DOMAIN: "{{ dns_domain }}"
    SERVICE_CLUSTER_IP_RANGE: "{{ kube_service_addresses }}"
    CERT_DIR: "{{ playbook_dir }}/{{ cert_syncdir.path }}/certs"
  run_once: true
  tags:
    - secrets

- name: certs | create system kubernetes groups
  sudo: yes
  group: name={{ kube_cert_group }} state=present system=yes
  tags:
    - secrets

- name: add default user to kubernetes group
  sudo: yes
  user:
    name={{ ansible_ssh_user }}
    system=yes
    groups={{ kube_cert_group }}
  tags:
    - secrets

- name: create cloud provider config
  sudo: yes
  template:
    src: cloud-config.j2
    dest: "{{ cloud_provider_config }}"
    owner: root
    group: root
    mode: 0644
  when: enable_cloud_provider and cloud_provider == "openstack"
  tags:
    - secrets
